name: CI

on: push

env:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.6.1"
  POETRY_HOME: "~/.poetry"

jobs:
  linters:
    name: "${{ matrix.linter }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        linter: ["isort", "black", "mypy", "flake8"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup project
        uses: ./.github/actions/setup-project
      - name: Run ${{ matrix.linter }}
        run: make ${{ matrix.linter }}
  pytest:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: heim
          POSTGRES_USER: heim
          POSTGRES_PASSWORD: heim
    env:
      # Postgres config
      PGHOST: localhost
      PGDATABASE: heim
      PGUSER: heim
      PGPASSWORD: heim
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup project
        uses: ./.github/actions/setup-project
      - name: Ensure Postgres is ready
        run: for i in {1..5}; do pg_isready && s=0 && break || s=$? && sleep 1; done; (exit $s)
      - name: Run ${{ matrix.linter }}
        run: pytest -v --cov=heim --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
